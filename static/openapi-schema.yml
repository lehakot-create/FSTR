openapi: 3.0.2
info:
 title: 'FSTR'
 version: '1.0'
paths:
 /api/v1/pereval/:
   get:
     operationId: listMountainPasses
     description: This method allows to get the list of mountain pass.<br/>
     parameters: []
     responses:
       '200':
         description: The list of available mountain pass from database in JSON format.
         content:
           application/json:
             schema:
               type: array
               items:
                 $ref: '#/components/schemas/MountainPass_add'
     summary: Get list of mountain pass
   post:
     operationId: createMountainPass
     description: This method allows to add information about new mountain pass.<br/>
     parameters: []
     requestBody:
       content:
         application/json:
           schema:
             $ref: "#/components/schemas/MountainPass_add"
     responses:
       '201':
         description: The status code 201 means that mountain pass was successfully added to the database.
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/MountainPass_add'
       '400':
         description: The error code means that provided data is incorrect
     summary: Add information about new mountain pass


 /api/v1/pereval/{id}/:
   get:
     operationId: getMountainPass
     description: This method allows to get the information of mountain pass by id.<br/>
     parameters:
      - name: id
        in: path
        description: ID record
        required: true
        schema:
         type: integer
         format: int64
     responses:
       '200':
         description: The information of available mountain pass from database in JSON format.
         content:
           application/json:
             schema:
               type: array
               items:
                 $ref: '#/components/schemas/MountainPass_add'
       '404':
         description: The information of available mountain pass from database not found
     summary: Get information about the mountain pass by id
   put:
    operationId: updateMountainPass
    description: This method allows to update information about the mountain pass by id
    parameters:
     - name: id
       in: path
       description: ID record
       required: true
       schema:
        type: integer
        format: int64
    requestBody:
        content:
         application/json:
           schema:
             $ref: "#/components/schemas/MountainPass_add"
    responses:
        '201':
          description: The status code 201 means that mountain pass was successfully updated to the database.
          content:
           application/json:
             schema:
               $ref: "#/components/schemas/MountainPass_add"
        '400':
          description: "Сhanges are prohibited"
        '404':
         description: The information of available mountain pass from database not found

 /api/v1/pereval/{id}/status/:
  get:
   operationId: statusMountainPass
   description: This method allows to get the status of mountain pass.<br/>
   parameters:
    - name: id
      in: path
      description: ID record
      required: true
      schema:
       type: integer
       format: int64
   responses:
       '200':
         description: The information about status mountain pass from database in JSON format.
         content:
           application/json:
             schema:
               type: array
               items:
                 $ref: '#/components/schemas/Status'
       '404':
         description: The information of available mountain pass from database not found
   summary: Get status the mountain pass by id



components:
 schemas:
   MountainPass_add:
     type: object
     properties:
       id:
         type: integer
         readOnly: true
       beautyTitle:
         type: string
         example: "пер."
       title:
         type: string
         example: "Пхия"
       other_titles:
         type: string
         example: "Триев"
       connect:
         type: string
         example: ""
       add_time:
        type: string
        example: "2021-09-22 13:18:13"
       user:
         type: object
         properties:
          id:
           type: integer
          email:
           type: string
           example: "email@example.com"
          phone:
           type: string
           example: "8-987-654-43-21"
          fam:
           type: string
           example: "Schwarzenegger"
          name:
           type: string
           example: "Arnold"
       coords:
        type: object
        properties:
         latitude:
          type: string
          example: "45.3842"
         longitude:
          type: string
          example: "7.1525"
         height:
          type: string
          example: "1200"
       type:
        type: string
        example: "pass"
       level:
        type: object
        properties:
         winter:
          type: string
          example: ""
         summer:
          type: string
          example: "1A"
         autumn:
          type: string
          example: "1A"
         spring:
          type: string
          example: ""
       images:
        type: array
        items:
         $ref: "#/components/schemas/Images"

     required:
     - name
   Images:
    type: object
    properties:
     url:
      type: string
      example: http://..."
     title:
      type: string
      example: "Подъём. Фото №1"
   Status:
    type: object
    properties:
     status:
      type: string
      example: 'new'


